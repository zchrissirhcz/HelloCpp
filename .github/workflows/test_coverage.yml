name: test_coverage
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: cancel-previous-runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone repository
      uses: actions/checkout@v3

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Install googletest
      shell: bash
      run: |
        git clone https://github.com/google/googletest --depth 1
        cd googletest
        mkdir build && cd build
        if [ '${{runner.os}}' == 'Windows' ]; then
          echo "Yes, this is on Windows"
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -Dgtest_force_shared_crt=ON -G "Visual Studio 16 2019" -A x64
        else
          echo "Ohh, this is not on Windows"
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -G Ninja
        fi
        cmake --build . --config ${{env.BUILD_TYPE}} -j 2
        cmake --install . --config ${{env.BUILD_TYPE}}

    - name: Coverage commands
      run: |
        sudo apt-get update -y
        sudo apt-get install -y gcovr lcov

    - name: CMake configure
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DGTest_DIR=${{github.workspace}}/googletest-install/lib/cmake/GTest -DHELLO_COVERAGE=ON -DHELLO_CODECOV=ON

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: lcov-collect
      shell: bash
      run: |
        if [ '${{runner.os}}' == 'Linux' ]; then
          cd build
          lcov -d ./ -c -o lcov.info
          lcov -r lcov.info '/usr/*' -o lcov.info
          lcov -r lcov.info '*/build/*' -o lcov.info
          lcov -r lcov.info '*/test/test_*' -o lcov.info
          lcov --list lcov.info
        fi
    - name: codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: build/lcov.info