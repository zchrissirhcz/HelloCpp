language: cpp

os: linux

dist: focal

branches:
  only:
    - main

addons:
  apt:
    packages:
      #- libopencv-dev
      - lcov
      - googletest
      - libgtest-dev
      - ninja-build
  snaps:
    - name: cmake --classic

jobs:
  include:
    - name: "linux-gcc-arm64"
      os: linux
      arch: arm64
      dist: focal
      compiler: gcc
      env:
        - NAME=linux-gcc
        - PATH=/snap/cmake/current/bin:$PATH
        - BUILD="mkdir -p build && cd build && cmake --version && cmake -GNinja .. && cmake --build . && ctest --output-on-failure -j 2"

    # - name: "linux-clang-arm64"
    #   os: linux
    #   arch: arm64
    #   dist: focal
    #   compiler: clang
    #   env:
    #     - NAME=linux-clang
    #     - PATH=/snap/cmake/current/bin:$PATH
    #     - LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH
    #     - BUILD="mkdir -p build && cd build && cmake --version && cmake -DPLAIN_BUILD_TESTS=ON -DPLAIN_BUILD_DOCS=OFF -GNinja .. && cmake --build . && ctest --output-on-failure -j 2"

before_install:
  - eval "${BEFORE_BUILD}"

script:
  - eval "${BUILD}"


after_success:
# Create lcov report
- lcov --capture --directory . --output-file coverage.info
- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
- lcov --list coverage.info # debug info
# Uploading report to CodeCov
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"


notifications:
  email:
    - imzhuo@foxmail.com